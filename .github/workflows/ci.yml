name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code_quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ✨ Generate Prisma client
        run: pnpm run db:generate

      - name: 🧹 Run lint
        run: pnpm run lint

      - name: 💅 Check formatting
        run: pnpm run format:check

      - name: 🔍 Type check
        run: pnpm run type-check

  unit_tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: code_quality

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ✨ Generate Prisma client
        run: pnpm run db:generate

      - name: 🧪 Run unit tests
        run: pnpm run test:unit

  database_tests:
    name: 🗄️ Database Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: code_quality

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test_db?schema=public"

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ✨ Generate Prisma client
        run: pnpm run db:generate

      - name: 🚀 Run migrations
        run: pnpm run db:migrate:dev

      - name: 🌱 Seed database
        run: pnpm run db:seed

      - name: 🔍 Test database connection
        run: |
          pnpm exec tsx -e "
          import { PrismaClient } from '@prisma/client';
          const prisma = new PrismaClient();
          prisma.\$connect().then(() => {
            console.log('✅ Database connected successfully');
            process.exit(0);
          }).catch(() => {
            console.error('❌ Database connection failed');
            process.exit(1);
          });
          "

  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [unit_tests, database_tests]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ✨ Generate Prisma client
        run: pnpm run db:generate

      - name: 🏗️ Build application
        run: pnpm run build
